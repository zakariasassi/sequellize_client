{"ast":null,"code":"var _jsxFileName = \"/Users/zakaria/Desktop/store/client/src/pages/AddStudent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from 'react';\nimport Addmodel from './Addmodel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Appcontext = /*#__PURE__*/createContext();\nfunction AddStudent() {\n  _s();\n  const [isopen, setIsopen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Appcontext.Provider, {\n      value: {\n        setIsopen\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" add new one \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), isopen ? /*#__PURE__*/_jsxDEV(Addmodel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Addmodel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(AddStudent, \"hF+CaUQbsG/yoFNyCf7KBt0rmmc=\");\n_c = AddStudent;\nexport default AddStudent;\nvar _c;\n$RefreshReg$(_c, \"AddStudent\");","map":{"version":3,"names":["React","useState","createContext","Addmodel","Appcontext","AddStudent","isopen","setIsopen"],"sources":["/Users/zakaria/Desktop/store/client/src/pages/AddStudent.js"],"sourcesContent":["import React , {useState , createContext} from 'react'\nimport Addmodel from './Addmodel'\n\n\n\nexport const  Appcontext = createContext()\n\nfunction AddStudent() {\n    const [ isopen , setIsopen ] = useState(false)\n\n  return (\n    <>\n    <Appcontext.Provider value={{  setIsopen }} >\n\n         <h1>Add Student</h1>\n        <button> add new one </button>\n        {\n            isopen ?   (\n                    <Addmodel />\n            ) : (\n                <Addmodel />\n\n            )\n        }\n    </Appcontext.Provider>\n    \n    </>\n  )\n}\n\nexport default AddStudent\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,aAAa,QAAO,OAAO;AACtD,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAAA;AAIjC,OAAO,MAAOC,UAAU,gBAAGF,aAAa,EAAE;AAE1C,SAASG,UAAU,GAAG;EAAA;EAClB,MAAM,CAAEC,MAAM,EAAGC,SAAS,CAAE,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEhD,oBACE;IAAA,uBACA,QAAC,UAAU,CAAC,QAAQ;MAAC,KAAK,EAAE;QAAGM;MAAU,CAAE;MAAA,wBAEtC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACrB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA8B,EAE1BD,MAAM,gBACE,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,gBAEhB,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAEZ;IAAA;MAAA;MAAA;MAAA;IAAA;EAEa,iBAEnB;AAEP;AAAC,GArBQD,UAAU;AAAA,KAAVA,UAAU;AAuBnB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}